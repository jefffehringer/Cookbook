{
	"BehaviorSubject Observable Pair": {
		"description": "",
		"prefix": "behSub-obs",
		"body": ["private ${1:name}Subject = new BehaviorSubject<${2:type}>(${3:defaultVal});",
			"${1:name}$ = this.${1:name}Subject.asObservable();"
		]
	},
	"Subject Observable Pair": {
		"description": "",
		"prefix": "sub-obs",
		"body": ["private ${1:name}Subject = new Subject<${2:type}>();",
			"${1:name}$ = this.${1:name}Subject.asObservable();"
		]
	},
	"BehaviorSubject Observable getter setter Pair": {
		"description": "",
		"prefix": "behSub-obs-get-set",
		"body": [
			"private ${1:name}Subject = new BehaviorSubject<${2:type}>(${3:defaultVal});",
			"${1:name}$ = this.${1:name}Subject.asObservable();",
			"",
			"protected get ${1:name}(): ${2:type} {",
			"\treturn this.${1:name}Subject.getValue();",
			"}",
			"protected set ${1:name}(val: ${2:type}) {",
			"\tthis.${1:name}Subject.next(val);",
			"}"
		]
	},
  "Empty store service": {
    "description": "",
    "prefix": "service-store",
    "body": [
      "import { environment } from '@cook/environment/environment';",
      "import { Injectable } from '@angular/core';",
      "import { StoreService } from '@cook/store/store.service';",
      "import { HttpService } from '@cook/store/http.service';",
      "import { ${2:ModelName} } from '@cook/models/${1:namePath}.interface';",
      "",
      "@Injectable({",
      "  providedIn: 'root'",
      "})",
      "export class ${2:ModelName}Service extends StoreService<${2:ModelName}> {",
      "  constructor(",
      "    protected http: HttpService<${2:ModelName}>",
      "  ) {",
      "    super(",
      "      http,",
      "      {",
      "        url: environment.apiUrl + '${1:namePath}s/',",
      "        idField: '_id',",
      "        itemName: '${2:ModelName}'",
      "      }",
      "    );",
      "  }",
      "}"
    ]
  }
}
